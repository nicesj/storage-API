// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"
)

// ReadFileOKCode is the HTTP code returned for type ReadFileOK
const ReadFileOKCode int = 200

/*ReadFileOK download a file

swagger:response readFileOK
*/
type ReadFileOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewReadFileOK creates ReadFileOK with default headers values
func NewReadFileOK() *ReadFileOK {

	return &ReadFileOK{}
}

// WithPayload adds the payload to the read file o k response
func (o *ReadFileOK) WithPayload(payload io.ReadCloser) *ReadFileOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read file o k response
func (o *ReadFileOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadFileOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReadFileBadRequestCode is the HTTP code returned for type ReadFileBadRequest
const ReadFileBadRequestCode int = 400

/*ReadFileBadRequest Bad Request

swagger:response readFileBadRequest
*/
type ReadFileBadRequest struct {
}

// NewReadFileBadRequest creates ReadFileBadRequest with default headers values
func NewReadFileBadRequest() *ReadFileBadRequest {

	return &ReadFileBadRequest{}
}

// WriteResponse to the client
func (o *ReadFileBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// ReadFileForbiddenCode is the HTTP code returned for type ReadFileForbidden
const ReadFileForbiddenCode int = 403

/*ReadFileForbidden Forbidden

swagger:response readFileForbidden
*/
type ReadFileForbidden struct {
}

// NewReadFileForbidden creates ReadFileForbidden with default headers values
func NewReadFileForbidden() *ReadFileForbidden {

	return &ReadFileForbidden{}
}

// WriteResponse to the client
func (o *ReadFileForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
